<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.areebqaisar</groupId>
    <artifactId>aria2c4j</artifactId>
    <version>1.1</version>
    <packaging>jar</packaging>

    <name>${project.groupId}:${project.artifactId}</name>
    <description>
        This is an Aria2c Client for Java to control Aria downloads from JSON-RPC Interface.
    </description>
    <url>https://github.com/areebqaisar/aria2c4j</url>

    <licenses>
        <license>
            <name>BSD 3-Clause</name>
            <url>https://opensource.org/licenses/BSD-3-Clause</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Areeb Qaisar</name>
            <email>areebqaisar@gmail.com</email>
            <url>http://areebqaisar.com/</url>
        </developer>
    </developers>

    <contributors>
        <contributor>
            <name>lixiaocong</name>
            <url>www.lixiaocong.com</url>
        </contributor>
    </contributors>

    <scm>
        <connection>scm:git:git://github.com/areebqaisar/public-temp-test.git</connection>
        <developerConnection>scm:git:ssh://github.com:areebqaisar/public-temp-test.git</developerConnection>
        <url>https://github.com/areebqaisar/public-temp-test/tree/master</url>
    </scm>

    <properties>
        <java.version>1.8</java.version>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
        <github.global.server>github</github.global.server>
        <apache.httpcomponent.version>4.4.1</apache.httpcomponent.version>
        <gson.version>2.8.6</gson.version>
        <lombok.version>1.18.12</lombok.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${apache.httpcomponent.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <distributionManagement>
        <repository>
            <id>internal.repo</id>
            <name>Temporary Staging Repository</name>
            <url>file://${project.build.directory}/mvn-repo</url>
        </repository>
    </distributionManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>3.0.0-M1</version>
                <configuration>
                    <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.github.github</groupId>
                <artifactId>site-maven-plugin</artifactId>
                <version>0.12</version>
                <configuration>
                    <message>Maven artifacts for ${project.version}</message> <!-- git commit message -->
                    <noJekyll>true</noJekyll>  <!-- disable webpage processing -->
                    <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> <!-- matches distribution management repository url above -->
                    <branch>refs/heads/mvn-repo</branch> <!-- remote branch name -->
                    <includes><include>**/*</include></includes>
                    <repositoryName>public-temp-test</repositoryName> <!-- github repo name -->
                    <repositoryOwner>areebqaisar</repositoryOwner> <!-- organization or user name  -->
                </configuration>
                <executions> <!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
                    <execution>
                        <goals>
                            <goal>site</goal>
                        </goals>
                        <phase>deploy</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>